{{- $codespaces:= env "CODESPACES" | not | not -}}
{{- $work:= true -}}
sourceDir = {{ .chezmoi.sourceDir | quote }}

{{- $ejsonkey := env "EJSON_KEY" -}}
{{- if eq $ejsonkey "" -}}
{{- fail "required env var EJSON_KEY is not set" -}}
{{- end -}}

{{- if eq .chezmoi.hostname "nixos" }}  
{{- $work = false -}}
{{ else if eq .chezmoi.os "darwin" -}}
{{- $work = false -}}
{{- end }}

{{- $chassisType := "desktop" }}
{{- if eq .chezmoi.os "darwin" }}
{{-   if contains "MacBook" (output "sysctl" "-n" "hw.model") }}
{{-     $chassisType = "laptop" }}
{{-   else }}
{{-     $chassisType = "desktop" }}
{{-   end }}
{{- else if eq .chezmoi.os "linux" }}
{{-   $chassisType = (output "hostnamectl" "--json=short" | mustFromJson).Chassis }}
{{- else if eq .chezmoi.os "windows" }}
{{-   $chassisType = (output "powershell.exe" "-NoProfile" "-NonInteractive" "-Command" "if ((Get-CimInstance -Class Win32_Battery | Measure-Object).Count -gt 0) { Write-Output 'laptop' } else { Write-Output 'desktop' }") | trim }}
{{- end }}

{{- $cpuCores := 1 }}
{{- $cpuThreads := 1 }}
{{- if eq .chezmoi.os "darwin" }}
{{-   $cpuCores = (output "sysctl" "-n" "hw.physicalcpu_max") | trim | atoi }}
{{-   $cpuThreads = (output "sysctl" "-n" "hw.logicalcpu_max") | trim | atoi }}
{{- else if eq .chezmoi.os "linux" }}
{{-   $cpuCores = (output "sh" "-c" "lscpu --online --parse | grep --invert-match '^#' | sort --field-separator=',' --key='2,4' --unique | wc --lines") | trim | atoi }}
{{-   $cpuThreads = (output "sh" "-c" "lscpu --online --parse | grep --invert-match '^#' | wc --lines") | trim | atoi }}
{{- else if eq .chezmoi.os "windows" }}
{{-   $cpuCores = (output "powershell.exe" "-NoProfile" "-NonInteractive" "-Command" "(Get-CimInstance -ClassName 'Win32_Processor').NumberOfCores") | trim | atoi }}
{{-   $cpuThreads = (output "powershell.exe" "-NoProfile" "-NonInteractive" "-Command" "(Get-CimInstance -ClassName 'Win32_Processor').NumberOfLogicalProcessors") | trim | atoi }}
{{- end }}

[data]
  codespaces = {{ $codespaces }}
  chassis_type = {{ quote $chassisType }}
  work = {{ $work }}
{{- if eq .chezmoi.os "darwin" }}
  font = "TODO"
{{- else if eq .chezmoi.osRelease.id "ubuntu" }}
  font = "Ubuntu Mono"
{{- else }}
  font = "SauceCodePro Nerd Font Mono"
{{- end }}
  ejson = {{ joinPath .chezmoi.sourceDir "chezmoi.ejson" | quote }}

[data.cpu]
  cores = {{ $cpuCores }}
  threads = {{ $cpuThreads }}

[edit]
  command = "vim"

[ejson]
  key = {{- quote $ejsonkey }}

